{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\blagoj.pejovski\\\\Desktop\\\\upshift-task\\\\upshift-project\\\\src\\\\components\\\\Dialog\\\\Dialog.js\",\n    _s = $RefreshSig$();\n\nimport { useDispatch } from \"react-redux\";\nimport \"./Dialog.css\";\nimport { useSelector } from \"react-redux\";\nimport { useState } from \"react\";\nimport { openDialog } from \"../../redux/dialog/dialogSlice\";\nimport { createProduct } from \"../../redux/product/productSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dialog = () => {\n  _s();\n\n  const visible = useSelector(state => state.dialog.dialogVisible);\n  useEffect(() => {\n    const createProduct = async () => {\n      try {\n        const res = await axios.post(\"https://my-json-server.typicode.com/drakulovski/dbplaceholder/products\");\n        dispatch(createProduct({\n          product: product\n        }));\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    fetchProducts();\n  }, []);\n  const dispatch = useDispatch();\n  const [product, setProduct] = useState({\n    title: \"\",\n    price: \"\",\n    image: \"\",\n    description: \"\"\n  });\n\n  const handleSave = () => {\n    if (newProduct) {\n      dispatch(createProduct({}));\n    }\n  };\n\n  const handleChange = e => {\n    setProduct(prev => ({ ...prev,\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: visible && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dialog-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          required: true,\n          type: \"text\",\n          name: \"title\",\n          id: \"title\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          required: true,\n          type: \"number\",\n          name: \"price\",\n          id: \"price\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          required: true,\n          type: \"url\",\n          name: \"image\",\n          id: \"image\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          required: true,\n          type: \"text\",\n          name: \"description\",\n          id: \"description\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSave,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => dispatch(openDialog({\n            dialogVisible: false\n          })),\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Dialog, \"6yyPtS5nr18yAJl493kvd2bAABE=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Dialog;\nexport default Dialog;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dialog\");","map":{"version":3,"sources":["C:/Users/blagoj.pejovski/Desktop/upshift-task/upshift-project/src/components/Dialog/Dialog.js"],"names":["useDispatch","useSelector","useState","openDialog","createProduct","Dialog","visible","state","dialog","dialogVisible","useEffect","res","axios","post","dispatch","product","err","console","log","fetchProducts","setProduct","title","price","image","description","handleSave","newProduct","handleChange","e","prev","target","name","value"],"mappings":";;;AAAA,SAASA,WAAT,QAA4B,aAA5B;AACA,OAAO,cAAP;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,UAAT,QAA2B,gCAA3B;AACA,SAASC,aAAT,QAA8B,kCAA9B;;;AACA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACjB,QAAMC,OAAO,GAAGL,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACC,MAAN,CAAaC,aAAzB,CAA3B;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMN,aAAa,GAAG,YAAY;AAC9B,UAAI;AACA,cAAMO,GAAG,GAAG,MAAMC,KAAK,CAACC,IAAN,CACd,wEADc,CAAlB;AAIAC,QAAAA,QAAQ,CAACV,aAAa,CAAC;AAAEW,UAAAA,OAAO,EAAEA;AAAX,SAAD,CAAd,CAAR;AACH,OAND,CAME,OAAOC,GAAP,EAAY;AACVC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH;AACJ,KAVD;;AAWAG,IAAAA,aAAa;AAChB,GAbQ,EAaN,EAbM,CAAT;AAeA,QAAML,QAAQ,GAAGd,WAAW,EAA5B;AACA,QAAM,CAACe,OAAD,EAAUK,UAAV,IAAwBlB,QAAQ,CAAC;AACnCmB,IAAAA,KAAK,EAAE,EAD4B;AAEnCC,IAAAA,KAAK,EAAE,EAF4B;AAGnCC,IAAAA,KAAK,EAAE,EAH4B;AAInCC,IAAAA,WAAW,EAAE;AAJsB,GAAD,CAAtC;;AAOA,QAAMC,UAAU,GAAG,MAAM;AACrB,QAAIC,UAAJ,EAAgB;AACZZ,MAAAA,QAAQ,CAACV,aAAa,CAAC,EAAD,CAAd,CAAR;AACH;AACJ,GAJD;;AAMA,QAAMuB,YAAY,GAAIC,CAAD,IAAO;AACxBR,IAAAA,UAAU,CAAES,IAAD,KAAW,EAClB,GAAGA,IADe;AAElB,OAACD,CAAC,CAACE,MAAF,CAASC,IAAV,GAAiBH,CAAC,CAACE,MAAF,CAASE;AAFR,KAAX,CAAD,CAAV;AAIH,GALD;;AAMA,sBACI;AAAA,cACK1B,OAAO,iBACJ;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,8BACI;AAAA,+BACI;AACI,UAAA,QAAQ,MADZ;AAEI,UAAA,IAAI,EAAC,MAFT;AAGI,UAAA,IAAI,EAAC,OAHT;AAII,UAAA,EAAE,EAAC,OAJP;AAKI,UAAA,QAAQ,EAAEqB;AALd;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAUI;AAAA,+BACI;AACI,UAAA,QAAQ,MADZ;AAEI,UAAA,IAAI,EAAC,QAFT;AAGI,UAAA,IAAI,EAAC,OAHT;AAII,UAAA,EAAE,EAAC,OAJP;AAKI,UAAA,QAAQ,EAAEA;AALd;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAVJ,eAmBI;AAAA,+BACI;AACI,UAAA,QAAQ,MADZ;AAEI,UAAA,IAAI,EAAC,KAFT;AAGI,UAAA,IAAI,EAAC,OAHT;AAII,UAAA,EAAE,EAAC,OAJP;AAKI,UAAA,QAAQ,EAAEA;AALd;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAnBJ,eA4BI;AAAA,+BACI;AACI,UAAA,QAAQ,MADZ;AAEI,UAAA,IAAI,EAAC,MAFT;AAGI,UAAA,IAAI,EAAC,aAHT;AAII,UAAA,EAAE,EAAC,aAJP;AAKI,UAAA,QAAQ,EAAEA;AALd;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cA5BJ,eAqCI;AAAA,gCACI;AAAQ,UAAA,OAAO,EAAEF,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AACI,UAAA,OAAO,EAAE,MACLX,QAAQ,CAACX,UAAU,CAAC;AAAEM,YAAAA,aAAa,EAAE;AAAjB,WAAD,CAAX,CAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cArCJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFR;AAAA;AAAA;AAAA;AAAA,UADJ;AAsDH,CA5FD;;GAAMJ,M;UACcJ,W,EAiBCD,W;;;KAlBfK,M;AA6FN,eAAeA,MAAf","sourcesContent":["import { useDispatch } from \"react-redux\";\r\nimport \"./Dialog.css\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useState } from \"react\";\r\nimport { openDialog } from \"../../redux/dialog/dialogSlice\";\r\nimport { createProduct } from \"../../redux/product/productSlice\";\r\nconst Dialog = () => {\r\n    const visible = useSelector((state) => state.dialog.dialogVisible);\r\n\r\n    useEffect(() => {\r\n        const createProduct = async () => {\r\n            try {\r\n                const res = await axios.post(\r\n                    \"https://my-json-server.typicode.com/drakulovski/dbplaceholder/products\"\r\n                );\r\n\r\n                dispatch(createProduct({ product: product }));\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n        };\r\n        fetchProducts();\r\n    }, []);\r\n\r\n    const dispatch = useDispatch();\r\n    const [product, setProduct] = useState({\r\n        title: \"\",\r\n        price: \"\",\r\n        image: \"\",\r\n        description: \"\",\r\n    });\r\n\r\n    const handleSave = () => {\r\n        if (newProduct) {\r\n            dispatch(createProduct({}));\r\n        }\r\n    };\r\n\r\n    const handleChange = (e) => {\r\n        setProduct((prev) => ({\r\n            ...prev,\r\n            [e.target.name]: e.target.value,\r\n        }));\r\n    };\r\n    return (\r\n        <div>\r\n            {visible && (\r\n                <div className=\"dialog-container\">\r\n                    <div>\r\n                        <input\r\n                            required\r\n                            type=\"text\"\r\n                            name=\"title\"\r\n                            id=\"title\"\r\n                            onChange={handleChange}\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <input\r\n                            required\r\n                            type=\"number\"\r\n                            name=\"price\"\r\n                            id=\"price\"\r\n                            onChange={handleChange}\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <input\r\n                            required\r\n                            type=\"url\"\r\n                            name=\"image\"\r\n                            id=\"image\"\r\n                            onChange={handleChange}\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <input\r\n                            required\r\n                            type=\"text\"\r\n                            name=\"description\"\r\n                            id=\"description\"\r\n                            onChange={handleChange}\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <button onClick={handleSave}>Save</button>\r\n                        <button\r\n                            onClick={() =>\r\n                                dispatch(openDialog({ dialogVisible: false }))\r\n                            }\r\n                        >\r\n                            Close\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\nexport default Dialog;\r\n"]},"metadata":{},"sourceType":"module"}