{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\blagoj.pejovski\\\\Desktop\\\\upshift-task\\\\upshift-project\\\\src\\\\components\\\\Products\\\\Products.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport \"./Products.css\";\nimport { openDialog } from \"../../redux/dialog/dialogSlice\";\nimport { currentProducts } from \"../../redux/product/productSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Products = () => {\n  _s();\n\n  const products = useSelector(state => state.product.products);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const fetchProducts = async () => {\n      try {\n        const res = await axios.get(\"https://my-json-server.typicode.com/drakulovski/dbplaceholder/products\", {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Accept: \"application/json\"\n          }\n        });\n        console.log(res.data);\n        dispatch(currentProducts({\n          products: res.data\n        }));\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    fetchProducts();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch(openDialog({\n        dialogVisible: true\n      })),\n      children: [\"Add product\", \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"products-container\",\n      children: products ? products.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: item.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: item.price\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: item.stock ? \"true\" : \"false\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 31\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 27\n      }, this)) : alert(\"There are currently no products\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Products, \"IF+/DJvFLBaO0twWgreOwyoO/ec=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Products;\nexport default Products;\n\nvar _c;\n\n$RefreshReg$(_c, \"Products\");","map":{"version":3,"sources":["C:/Users/blagoj.pejovski/Desktop/upshift-task/upshift-project/src/components/Products/Products.js"],"names":["axios","useEffect","useState","useDispatch","useSelector","openDialog","currentProducts","Products","products","state","product","dispatch","fetchProducts","res","get","headers","Accept","console","log","data","err","dialogVisible","map","item","title","price","stock","id","alert"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAO,gBAAP;AACA,SAASC,UAAT,QAA2B,gCAA3B;AACA,SAASC,eAAT,QAAgC,kCAAhC;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACnB,QAAMC,QAAQ,GAAGJ,WAAW,CAAEK,KAAD,IAAWA,KAAK,CAACC,OAAN,CAAcF,QAA1B,CAA5B;AACA,QAAMG,QAAQ,GAAGR,WAAW,EAA5B;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMW,aAAa,GAAG,YAAY;AAC9B,UAAI;AACA,cAAMC,GAAG,GAAG,MAAMb,KAAK,CAACc,GAAN,CACd,wEADc,EAEd;AACIC,UAAAA,OAAO,EAAE;AACL,4BAAgB,kBADX;AAELC,YAAAA,MAAM,EAAE;AAFH;AADb,SAFc,CAAlB;AASAC,QAAAA,OAAO,CAACC,GAAR,CAAYL,GAAG,CAACM,IAAhB;AACAR,QAAAA,QAAQ,CAACL,eAAe,CAAC;AAAEE,UAAAA,QAAQ,EAAEK,GAAG,CAACM;AAAhB,SAAD,CAAhB,CAAR;AACH,OAZD,CAYE,OAAOC,GAAP,EAAY;AACVH,QAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACH;AACJ,KAhBD;;AAiBAR,IAAAA,aAAa;AAChB,GAnBQ,EAmBN,EAnBM,CAAT;AAqBA,sBACI;AAAA,4BACI;AACI,MAAA,OAAO,EAAE,MAAMD,QAAQ,CAACN,UAAU,CAAC;AAAEgB,QAAAA,aAAa,EAAE;AAAjB,OAAD,CAAX,CAD3B;AAAA,gCAGgB,GAHhB;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAMI;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA,gBACKb,QAAQ,GACHA,QAAQ,CAACc,GAAT,CAAcC,IAAD,iBACT;AAAA,gCACI;AAAA,oBAAOA,IAAI,CAACC;AAAZ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,oBAAOD,IAAI,CAACE;AAAZ;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAA,oBAAOF,IAAI,CAACG,KAAL,GAAa,MAAb,GAAsB;AAA7B;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA,SAAUH,IAAI,CAACI,EAAf;AAAA;AAAA;AAAA;AAAA,cADJ,CADG,GASHC,KAAK,CAAC,iCAAD;AAVf;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAqBH,CA9CD;;GAAMrB,Q;UACeH,W,EACAD,W;;;KAFfI,Q;AA+CN,eAAeA,QAAf","sourcesContent":["import axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport \"./Products.css\";\r\nimport { openDialog } from \"../../redux/dialog/dialogSlice\";\r\nimport { currentProducts } from \"../../redux/product/productSlice\";\r\n\r\nconst Products = () => {\r\n    const products = useSelector((state) => state.product.products);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        const fetchProducts = async () => {\r\n            try {\r\n                const res = await axios.get(\r\n                    \"https://my-json-server.typicode.com/drakulovski/dbplaceholder/products\",\r\n                    {\r\n                        headers: {\r\n                            \"Content-Type\": \"application/json\",\r\n                            Accept: \"application/json\",\r\n                        },\r\n                    }\r\n                );\r\n                console.log(res.data);\r\n                dispatch(currentProducts({ products: res.data }));\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n        };\r\n        fetchProducts();\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <button\r\n                onClick={() => dispatch(openDialog({ dialogVisible: true }))}\r\n            >\r\n                Add product{\" \"}\r\n            </button>\r\n            <div className=\"products-container\">\r\n                {products\r\n                    ? products.map((item) => (\r\n                          <div key={item.id}>\r\n                              <span>{item.title}</span>\r\n                              <span>{item.price}</span>\r\n                              <span>{item.stock ? \"true\" : \"false\"}</span>\r\n                              {/* <img src={item.picture} /> */}\r\n                          </div>\r\n                      ))\r\n                    : alert(\"There are currently no products\")}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default Products;\r\n"]},"metadata":{},"sourceType":"module"}