{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\blagoj.pejovski\\\\Desktop\\\\upshift-task\\\\upshift-project\\\\src\\\\components\\\\Dialog\\\\Dialog.js\",\n    _s = $RefreshSig$();\n\nimport { useDispatch } from \"react-redux\";\nimport \"./Dialog.css\";\nimport { useSelector } from \"react-redux\";\nimport { useEffect, useState } from \"react\";\nimport { openDialog } from \"../../redux/dialog/dialogSlice\";\nimport { createProduct } from \"../../redux/product/productSlice\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dialog = () => {\n  _s();\n\n  const visible = useSelector(state => state.dialog.dialogVisible);\n  const states = useSelector(state => state.utility.states);\n  const categories = useSelector(state => state.utility.categories);\n  const dispatch = useDispatch();\n  const [product, setProduct] = useState({\n    title: \"\",\n    price: \"\",\n    image: \"\",\n    description: \"\",\n    categoryId: \"\",\n    stateId: \"\"\n  });\n\n  const handleSave = async () => {\n    try {\n      const res = await axios.post(\"https://my-json-server.typicode.com/drakulovski/dbplaceholder/products\");\n      console.log(res.data);\n      dispatch(createProduct({\n        product: product\n      }));\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const handleChange = e => {\n    setProduct(prev => ({ ...prev,\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: visible && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dialog-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        value: product.stateId,\n        name: \"state\",\n        onChange: handleChange,\n        children: states.map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: item.id,\n          children: item.name\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: product.categoryId,\n        name: \"category\",\n        onChange: handleChange,\n        children: categories.map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: item.id,\n          children: item.name\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          required: true,\n          type: \"text\",\n          name: \"title\",\n          id: \"title\",\n          value: product.title,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          required: true,\n          type: \"number\",\n          name: \"price\",\n          id: \"price\",\n          value: product.price,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          required: true,\n          type: \"url\",\n          name: \"image\",\n          id: \"image\",\n          value: product.image,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          required: true,\n          type: \"text\",\n          name: \"description\",\n          id: \"description\",\n          value: product.description,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          onClick: handleSave,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => dispatch(openDialog({\n            dialogVisible: false\n          })),\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Dialog, \"zFQWqJOTxdNcWS1+qq9Bvw5nWp4=\", false, function () {\n  return [useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = Dialog;\nexport default Dialog;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dialog\");","map":{"version":3,"sources":["C:/Users/blagoj.pejovski/Desktop/upshift-task/upshift-project/src/components/Dialog/Dialog.js"],"names":["useDispatch","useSelector","useEffect","useState","openDialog","createProduct","axios","Dialog","visible","state","dialog","dialogVisible","states","utility","categories","dispatch","product","setProduct","title","price","image","description","categoryId","stateId","handleSave","res","post","console","log","data","err","handleChange","e","prev","target","name","value","map","item","id"],"mappings":";;;AAAA,SAASA,WAAT,QAA4B,aAA5B;AACA,OAAO,cAAP;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,UAAT,QAA2B,gCAA3B;AACA,SAASC,aAAT,QAA8B,kCAA9B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACjB,QAAMC,OAAO,GAAGP,WAAW,CAAEQ,KAAD,IAAWA,KAAK,CAACC,MAAN,CAAaC,aAAzB,CAA3B;AACA,QAAMC,MAAM,GAAGX,WAAW,CAAEQ,KAAD,IAAWA,KAAK,CAACI,OAAN,CAAcD,MAA1B,CAA1B;AACA,QAAME,UAAU,GAAGb,WAAW,CAAEQ,KAAD,IAAWA,KAAK,CAACI,OAAN,CAAcC,UAA1B,CAA9B;AAEA,QAAMC,QAAQ,GAAGf,WAAW,EAA5B;AACA,QAAM,CAACgB,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAC;AACnCe,IAAAA,KAAK,EAAE,EAD4B;AAEnCC,IAAAA,KAAK,EAAE,EAF4B;AAGnCC,IAAAA,KAAK,EAAE,EAH4B;AAInCC,IAAAA,WAAW,EAAE,EAJsB;AAKnCC,IAAAA,UAAU,EAAE,EALuB;AAMnCC,IAAAA,OAAO,EAAE;AAN0B,GAAD,CAAtC;;AASA,QAAMC,UAAU,GAAG,YAAY;AAC3B,QAAI;AACA,YAAMC,GAAG,GAAG,MAAMnB,KAAK,CAACoB,IAAN,CACd,wEADc,CAAlB;AAGAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,GAAG,CAACI,IAAhB;AACAd,MAAAA,QAAQ,CAACV,aAAa,CAAC;AAAEW,QAAAA,OAAO,EAAEA;AAAX,OAAD,CAAd,CAAR;AACH,KAND,CAME,OAAOc,GAAP,EAAY;AACVH,MAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACH;AACJ,GAVD;;AAYA,QAAMC,YAAY,GAAIC,CAAD,IAAO;AACxBf,IAAAA,UAAU,CAAEgB,IAAD,KAAW,EAClB,GAAGA,IADe;AAElB,OAACD,CAAC,CAACE,MAAF,CAASC,IAAV,GAAiBH,CAAC,CAACE,MAAF,CAASE;AAFR,KAAX,CAAD,CAAV;AAIH,GALD;;AAOA,sBACI;AAAA,cACK5B,OAAO,iBACJ;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,8BACI;AACI,QAAA,KAAK,EAAEQ,OAAO,CAACO,OADnB;AAEI,QAAA,IAAI,EAAC,OAFT;AAGI,QAAA,QAAQ,EAAEQ,YAHd;AAAA,kBAKKnB,MAAM,CAACyB,GAAP,CAAYC,IAAD,iBACR;AAAQ,UAAA,KAAK,EAAEA,IAAI,CAACC,EAApB;AAAA,oBACKD,IAAI,CAACH;AADV,WAA6BG,IAAI,CAACC,EAAlC;AAAA;AAAA;AAAA;AAAA,gBADH;AALL;AAAA;AAAA;AAAA;AAAA,cADJ,eAYI;AACI,QAAA,KAAK,EAAEvB,OAAO,CAACM,UADnB;AAEI,QAAA,IAAI,EAAC,UAFT;AAGI,QAAA,QAAQ,EAAES,YAHd;AAAA,kBAKKjB,UAAU,CAACuB,GAAX,CAAgBC,IAAD,iBACZ;AAAQ,UAAA,KAAK,EAAEA,IAAI,CAACC,EAApB;AAAA,oBACKD,IAAI,CAACH;AADV,WAA6BG,IAAI,CAACC,EAAlC;AAAA;AAAA;AAAA;AAAA,gBADH;AALL;AAAA;AAAA;AAAA;AAAA,cAZJ,eAuBI;AAAA,+BACI;AACI,UAAA,QAAQ,MADZ;AAEI,UAAA,IAAI,EAAC,MAFT;AAGI,UAAA,IAAI,EAAC,OAHT;AAII,UAAA,EAAE,EAAC,OAJP;AAKI,UAAA,KAAK,EAAEvB,OAAO,CAACE,KALnB;AAMI,UAAA,QAAQ,EAAEa;AANd;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAvBJ,eAiCI;AAAA,+BACI;AACI,UAAA,QAAQ,MADZ;AAEI,UAAA,IAAI,EAAC,QAFT;AAGI,UAAA,IAAI,EAAC,OAHT;AAII,UAAA,EAAE,EAAC,OAJP;AAKI,UAAA,KAAK,EAAEf,OAAO,CAACG,KALnB;AAMI,UAAA,QAAQ,EAAEY;AANd;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAjCJ,eA2CI;AAAA,+BACI;AACI,UAAA,QAAQ,MADZ;AAEI,UAAA,IAAI,EAAC,KAFT;AAGI,UAAA,IAAI,EAAC,OAHT;AAII,UAAA,EAAE,EAAC,OAJP;AAKI,UAAA,KAAK,EAAEf,OAAO,CAACI,KALnB;AAMI,UAAA,QAAQ,EAAEW;AANd;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cA3CJ,eAqDI;AAAA,+BACI;AACI,UAAA,QAAQ,MADZ;AAEI,UAAA,IAAI,EAAC,MAFT;AAGI,UAAA,IAAI,EAAC,aAHT;AAII,UAAA,EAAE,EAAC,aAJP;AAKI,UAAA,KAAK,EAAEf,OAAO,CAACK,WALnB;AAMI,UAAA,QAAQ,EAAEU;AANd;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cArDJ,eA+DI;AAAA,gCACI;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,OAAO,EAAEP,UAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII;AACI,UAAA,OAAO,EAAE,MACLT,QAAQ,CAACX,UAAU,CAAC;AAAEO,YAAAA,aAAa,EAAE;AAAjB,WAAD,CAAX,CAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cA/DJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFR;AAAA;AAAA;AAAA;AAAA,UADJ;AAkFH,CApHD;;GAAMJ,M;UACcN,W,EACDA,W,EACIA,W,EAEFD,W;;;KALfO,M;AAqHN,eAAeA,MAAf","sourcesContent":["import { useDispatch } from \"react-redux\";\r\nimport \"./Dialog.css\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { openDialog } from \"../../redux/dialog/dialogSlice\";\r\nimport { createProduct } from \"../../redux/product/productSlice\";\r\nimport axios from \"axios\";\r\n\r\nconst Dialog = () => {\r\n    const visible = useSelector((state) => state.dialog.dialogVisible);\r\n    const states = useSelector((state) => state.utility.states);\r\n    const categories = useSelector((state) => state.utility.categories);\r\n\r\n    const dispatch = useDispatch();\r\n    const [product, setProduct] = useState({\r\n        title: \"\",\r\n        price: \"\",\r\n        image: \"\",\r\n        description: \"\",\r\n        categoryId: \"\",\r\n        stateId: \"\",\r\n    });\r\n\r\n    const handleSave = async () => {\r\n        try {\r\n            const res = await axios.post(\r\n                \"https://my-json-server.typicode.com/drakulovski/dbplaceholder/products\"\r\n            );\r\n            console.log(res.data);\r\n            dispatch(createProduct({ product: product }));\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    };\r\n\r\n    const handleChange = (e) => {\r\n        setProduct((prev) => ({\r\n            ...prev,\r\n            [e.target.name]: e.target.value,\r\n        }));\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {visible && (\r\n                <div className=\"dialog-container\">\r\n                    <select\r\n                        value={product.stateId}\r\n                        name=\"state\"\r\n                        onChange={handleChange}\r\n                    >\r\n                        {states.map((item) => (\r\n                            <option value={item.id} key={item.id}>\r\n                                {item.name}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n                    <select\r\n                        value={product.categoryId}\r\n                        name=\"category\"\r\n                        onChange={handleChange}\r\n                    >\r\n                        {categories.map((item) => (\r\n                            <option value={item.id} key={item.id}>\r\n                                {item.name}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n                    <div>\r\n                        <input\r\n                            required\r\n                            type=\"text\"\r\n                            name=\"title\"\r\n                            id=\"title\"\r\n                            value={product.title}\r\n                            onChange={handleChange}\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <input\r\n                            required\r\n                            type=\"number\"\r\n                            name=\"price\"\r\n                            id=\"price\"\r\n                            value={product.price}\r\n                            onChange={handleChange}\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <input\r\n                            required\r\n                            type=\"url\"\r\n                            name=\"image\"\r\n                            id=\"image\"\r\n                            value={product.image}\r\n                            onChange={handleChange}\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <input\r\n                            required\r\n                            type=\"text\"\r\n                            name=\"description\"\r\n                            id=\"description\"\r\n                            value={product.description}\r\n                            onChange={handleChange}\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <button type=\"submit\" onClick={handleSave}>\r\n                            Save\r\n                        </button>\r\n                        <button\r\n                            onClick={() =>\r\n                                dispatch(openDialog({ dialogVisible: false }))\r\n                            }\r\n                        >\r\n                            Close\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\nexport default Dialog;\r\n"]},"metadata":{},"sourceType":"module"}