{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\blagoj.pejovski\\\\Desktop\\\\upshift-task\\\\upshift-project\\\\src\\\\components\\\\Dialog\\\\Dialog.js\",\n    _s = $RefreshSig$();\n\nimport { useDispatch } from \"react-redux\";\nimport \"./Dialog.css\";\nimport { useSelector } from \"react-redux\";\nimport { useEffect, useState } from \"react\";\nimport { openDialog } from \"../../redux/dialog/dialogSlice\";\nimport { createProduct } from \"../../redux/product/productSlice\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dialog = () => {\n  _s();\n\n  const visible = useSelector(state => state.dialog.dialogVisible);\n  const states = useSelector(state => state.utility.states);\n  const categories = useSelector(state => state.utility.categories);\n  const dispatch = useDispatch();\n  const [product, setProduct] = useState({\n    title: \"\",\n    price: \"\",\n    image: \"\",\n    description: \"\",\n    categoryId: \"\",\n    stateId: \"\"\n  });\n  const [validationErrors, setValidationErrors] = useState([]);\n\n  const handleSave = async e => {\n    e.preventDefault();\n\n    try {\n      const res = await axios.post(\"https://my-json-server.typicode.com/drakulovski/dbplaceholder/products\");\n      dispatch(createProduct({\n        product: product\n      }));\n      dispatch(openDialog({\n        dialogVisible: false\n      }));\n      setProduct({\n        title: \"\",\n        price: 0,\n        image: \"\",\n        description: \"\",\n        categoryId: \"\",\n        stateId: \"\"\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const handleChange = e => {\n    setProduct(prev => ({ ...prev,\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  useEffect(() => {\n    const validateInput = () => {\n      if (product.title.length < 4) {\n        setValidationErrors(prev => [...prev, \"Title needs to be 4 characters or longer!\"]);\n      }\n\n      if (product.price <= 4) {\n        setValidationErrors(prev => [...prev, \"Price needs to be higher than 4!\"]);\n      }\n\n      if (states.find(state => state.id === product.stateId).tax > 0.25 && product.price <= 7) {\n        setValidationErrors(prev => [...prev, \"Price needs to be higher than 7 for states with tax above 0.25!\"]);\n      }\n    };\n\n    validateInput();\n  }, [product, validateInput]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: visible && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dialog-container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSave,\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          value: product.stateId,\n          defaultValue: \"Select state\",\n          name: \"stateId\",\n          onChange: handleChange,\n          children: states.map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: item.id,\n            children: item.name\n          }, item.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: product.categoryId,\n          defaultValue: \"Select category\",\n          name: \"categoryId\",\n          onChange: handleChange,\n          children: categories.map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: item.id,\n            children: item.name\n          }, item.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            required: true,\n            type: \"text\",\n            name: \"title\",\n            id: \"title\",\n            placeholder: \"Name\",\n            value: product.title,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            required: true,\n            type: \"number\",\n            name: \"price\",\n            id: \"price\",\n            placeholder: \"Price\",\n            value: product.price,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            required: true,\n            type: \"url\",\n            name: \"image\",\n            id: \"image\",\n            placeholder: \"Image URL\",\n            value: product.image,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            required: true,\n            type: \"text\",\n            name: \"description\",\n            id: \"description\",\n            placeholder: \"Description\",\n            value: product.description,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => dispatch(openDialog({\n              dialogVisible: false\n            })),\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Dialog, \"0OpRAWa52GedII5dlxH/MX8dCpQ=\", false, function () {\n  return [useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = Dialog;\nexport default Dialog;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dialog\");","map":{"version":3,"sources":["C:/Users/blagoj.pejovski/Desktop/upshift-task/upshift-project/src/components/Dialog/Dialog.js"],"names":["useDispatch","useSelector","useEffect","useState","openDialog","createProduct","axios","Dialog","visible","state","dialog","dialogVisible","states","utility","categories","dispatch","product","setProduct","title","price","image","description","categoryId","stateId","validationErrors","setValidationErrors","handleSave","e","preventDefault","res","post","err","console","log","handleChange","prev","target","name","value","validateInput","length","find","id","tax","map","item"],"mappings":"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","sourcesContent":["import { useDispatch } from \"react-redux\";\r\nimport \"./Dialog.css\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { openDialog } from \"../../redux/dialog/dialogSlice\";\r\nimport { createProduct } from \"../../redux/product/productSlice\";\r\nimport axios from \"axios\";\r\n\r\nconst Dialog = () => {\r\n    const visible = useSelector((state) => state.dialog.dialogVisible);\r\n    const states = useSelector((state) => state.utility.states);\r\n    const categories = useSelector((state) => state.utility.categories);\r\n    const dispatch = useDispatch();\r\n\r\n    const [product, setProduct] = useState({\r\n        title: \"\",\r\n        price: \"\",\r\n        image: \"\",\r\n        description: \"\",\r\n        categoryId: \"\",\r\n        stateId: \"\",\r\n    });\r\n    const [validationErrors, setValidationErrors] = useState([]);\r\n\r\n    const handleSave = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const res = await axios.post(\r\n                \"https://my-json-server.typicode.com/drakulovski/dbplaceholder/products\"\r\n            );\r\n            dispatch(createProduct({ product: product }));\r\n            dispatch(openDialog({ dialogVisible: false }));\r\n            setProduct({\r\n                title: \"\",\r\n                price: 0,\r\n                image: \"\",\r\n                description: \"\",\r\n                categoryId: \"\",\r\n                stateId: \"\",\r\n            });\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    };\r\n\r\n    const handleChange = (e) => {\r\n        setProduct((prev) => ({\r\n            ...prev,\r\n            [e.target.name]: e.target.value,\r\n        }));\r\n    };\r\n\r\n    useEffect(() => {\r\n        const validateInput = () => {\r\n            if (product.title.length < 4) {\r\n                setValidationErrors((prev) => [\r\n                    ...prev,\r\n                    \"Title needs to be 4 characters or longer!\",\r\n                ]);\r\n            }\r\n            if (product.price <= 4) {\r\n                setValidationErrors((prev) => [\r\n                    ...prev,\r\n                    \"Price needs to be higher than 4!\",\r\n                ]);\r\n            }\r\n            if (\r\n                states.find((state) => state.id === product.stateId).tax >\r\n                    0.25 &&\r\n                product.price <= 7\r\n            ) {\r\n                setValidationErrors((prev) => [\r\n                    ...prev,\r\n                    \"Price needs to be higher than 7 for states with tax above 0.25!\",\r\n                ]);\r\n            }\r\n        };\r\n        validateInput();\r\n    }, [product, validateInput]);\r\n\r\n    return (\r\n        <div>\r\n            {visible && (\r\n                <div className=\"dialog-container\">\r\n                    <form onSubmit={handleSave}>\r\n                        <select\r\n                            value={product.stateId}\r\n                            defaultValue=\"Select state\"\r\n                            name=\"stateId\"\r\n                            onChange={handleChange}\r\n                        >\r\n                            {states.map((item) => (\r\n                                <option value={item.id} key={item.id}>\r\n                                    {item.name}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                        <select\r\n                            value={product.categoryId}\r\n                            defaultValue=\"Select category\"\r\n                            name=\"categoryId\"\r\n                            onChange={handleChange}\r\n                        >\r\n                            {categories.map((item) => (\r\n                                <option value={item.id} key={item.id}>\r\n                                    {item.name}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                        <div>\r\n                            <input\r\n                                required\r\n                                type=\"text\"\r\n                                name=\"title\"\r\n                                id=\"title\"\r\n                                placeholder=\"Name\"\r\n                                value={product.title}\r\n                                onChange={handleChange}\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            <input\r\n                                required\r\n                                type=\"number\"\r\n                                name=\"price\"\r\n                                id=\"price\"\r\n                                placeholder=\"Price\"\r\n                                value={product.price}\r\n                                onChange={handleChange}\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            <input\r\n                                required\r\n                                type=\"url\"\r\n                                name=\"image\"\r\n                                id=\"image\"\r\n                                placeholder=\"Image URL\"\r\n                                value={product.image}\r\n                                onChange={handleChange}\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            <input\r\n                                required\r\n                                type=\"text\"\r\n                                name=\"description\"\r\n                                id=\"description\"\r\n                                placeholder=\"Description\"\r\n                                value={product.description}\r\n                                onChange={handleChange}\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            <button type=\"submit\">Save</button>\r\n                            <button\r\n                                onClick={() =>\r\n                                    dispatch(\r\n                                        openDialog({ dialogVisible: false })\r\n                                    )\r\n                                }\r\n                            >\r\n                                Close\r\n                            </button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\nexport default Dialog;\r\n"]},"metadata":{},"sourceType":"module"}