{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst slice = createSlice({\n  name: \"product\",\n  initialState: {\n    products: [],\n    selectedProduct: {}\n  },\n  reducers: {\n    currentProducts: (state, action) => {\n      state.products = [...state.products, ...action.payload.products];\n      state.selectedProduct = state.products[0];\n    },\n    createProduct: (state, action) => {\n      state.products = [...state.products, { ...action.payload.product,\n        id: state.products.length + 1\n      }];\n    },\n    selectProduct: (state, action) => {\n      state.selectedProduct = { ...state.products.find(product => product.id === +action.payload.productId)\n      };\n    }\n  }\n});\nexport const {\n  createProduct,\n  selectProduct,\n  currentProducts\n} = slice.actions;\nexport default slice.reducer;","map":{"version":3,"sources":["C:/Users/blagoj.pejovski/Desktop/upshift-task/upshift-project/src/redux/product/productSlice.js"],"names":["createSlice","slice","name","initialState","products","selectedProduct","reducers","currentProducts","state","action","payload","createProduct","product","id","length","selectProduct","find","productId","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,KAAK,GAAGD,WAAW,CAAC;AACtBE,EAAAA,IAAI,EAAE,SADgB;AAEtBC,EAAAA,YAAY,EAAE;AACVC,IAAAA,QAAQ,EAAE,EADA;AAEVC,IAAAA,eAAe,EAAE;AAFP,GAFQ;AAMtBC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,eAAe,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAChCD,MAAAA,KAAK,CAACJ,QAAN,GAAiB,CAAC,GAAGI,KAAK,CAACJ,QAAV,EAAoB,GAAGK,MAAM,CAACC,OAAP,CAAeN,QAAtC,CAAjB;AACAI,MAAAA,KAAK,CAACH,eAAN,GAAwBG,KAAK,CAACJ,QAAN,CAAe,CAAf,CAAxB;AACH,KAJK;AAKNO,IAAAA,aAAa,EAAE,CAACH,KAAD,EAAQC,MAAR,KAAmB;AAC9BD,MAAAA,KAAK,CAACJ,QAAN,GAAiB,CACb,GAAGI,KAAK,CAACJ,QADI,EAEb,EAAE,GAAGK,MAAM,CAACC,OAAP,CAAeE,OAApB;AAA6BC,QAAAA,EAAE,EAAEL,KAAK,CAACJ,QAAN,CAAeU,MAAf,GAAwB;AAAzD,OAFa,CAAjB;AAIH,KAVK;AAWNC,IAAAA,aAAa,EAAE,CAACP,KAAD,EAAQC,MAAR,KAAmB;AAC9BD,MAAAA,KAAK,CAACH,eAAN,GAAwB,EACpB,GAAGG,KAAK,CAACJ,QAAN,CAAeY,IAAf,CACEJ,OAAD,IAAaA,OAAO,CAACC,EAAR,KAAe,CAACJ,MAAM,CAACC,OAAP,CAAeO,SAD7C;AADiB,OAAxB;AAKH;AAjBK;AANY,CAAD,CAAzB;AA2BA,OAAO,MAAM;AAAEN,EAAAA,aAAF;AAAiBI,EAAAA,aAAjB;AAAgCR,EAAAA;AAAhC,IAAoDN,KAAK,CAACiB,OAAhE;AAEP,eAAejB,KAAK,CAACkB,OAArB","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst slice = createSlice({\r\n    name: \"product\",\r\n    initialState: {\r\n        products: [],\r\n        selectedProduct: {},\r\n    },\r\n    reducers: {\r\n        currentProducts: (state, action) => {\r\n            state.products = [...state.products, ...action.payload.products];\r\n            state.selectedProduct = state.products[0];\r\n        },\r\n        createProduct: (state, action) => {\r\n            state.products = [\r\n                ...state.products,\r\n                { ...action.payload.product, id: state.products.length + 1 },\r\n            ];\r\n        },\r\n        selectProduct: (state, action) => {\r\n            state.selectedProduct = {\r\n                ...state.products.find(\r\n                    (product) => product.id === +action.payload.productId\r\n                ),\r\n            };\r\n        },\r\n    },\r\n});\r\n\r\nexport const { createProduct, selectProduct, currentProducts } = slice.actions;\r\n\r\nexport default slice.reducer;\r\n"]},"metadata":{},"sourceType":"module"}