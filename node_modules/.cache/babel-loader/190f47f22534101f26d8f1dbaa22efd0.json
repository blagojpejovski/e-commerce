{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\blagoj.pejovski\\\\Desktop\\\\upshift-task\\\\upshift-project\\\\src\\\\components\\\\Products\\\\Products.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport \"./Products.css\";\nimport { openDialog } from \"../../redux/dialog/dialogSlice\";\nimport { currentProducts } from \"../../redux/product/productSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Products = () => {\n  _s();\n\n  const [products, setProducts] = useState([]);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const fetchProducts = async () => {\n      try {\n        const res = await axios.get(\"https://my-json-server.typicode.com/drakulovski/dbplaceholder/products\", {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Accept: \"application/json\"\n          }\n        });\n        setProducts(res.data);\n        dispatch(currentProducts({\n          products: products\n        }));\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    fetchProducts();\n    dispatch(currentProducts({\n      products: products\n    }));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch(openDialog({\n        dialogVisible: true\n      })),\n      children: [\"Add product\", \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"products-container\",\n      children: products.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: item.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: item.price\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: item.stock ? \"true\" : \"false\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Products, \"vPuPuxeBVLZs+OWvh97ea7MMf0Y=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Products;\nexport default Products;\n\nvar _c;\n\n$RefreshReg$(_c, \"Products\");","map":{"version":3,"sources":["C:/Users/blagoj.pejovski/Desktop/upshift-task/upshift-project/src/components/Products/Products.js"],"names":["axios","useEffect","useState","useDispatch","openDialog","currentProducts","Products","products","setProducts","dispatch","fetchProducts","res","get","headers","Accept","data","err","console","log","dialogVisible","map","item","title","price","stock","id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAO,gBAAP;AACA,SAASC,UAAT,QAA2B,gCAA3B;AACA,SAASC,eAAT,QAAgC,kCAAhC;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACnB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,EAAD,CAAxC;AAEA,QAAMO,QAAQ,GAAGN,WAAW,EAA5B;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMS,aAAa,GAAG,YAAY;AAC9B,UAAI;AACA,cAAMC,GAAG,GAAG,MAAMX,KAAK,CAACY,GAAN,CACd,wEADc,EAEd;AACIC,UAAAA,OAAO,EAAE;AACL,4BAAgB,kBADX;AAELC,YAAAA,MAAM,EAAE;AAFH;AADb,SAFc,CAAlB;AASAN,QAAAA,WAAW,CAACG,GAAG,CAACI,IAAL,CAAX;AACAN,QAAAA,QAAQ,CAACJ,eAAe,CAAC;AAAEE,UAAAA,QAAQ,EAAEA;AAAZ,SAAD,CAAhB,CAAR;AACH,OAZD,CAYE,OAAOS,GAAP,EAAY;AACVC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH;AACJ,KAhBD;;AAkBAN,IAAAA,aAAa;AACbD,IAAAA,QAAQ,CAACJ,eAAe,CAAC;AAAEE,MAAAA,QAAQ,EAAEA;AAAZ,KAAD,CAAhB,CAAR;AACH,GArBQ,EAqBN,EArBM,CAAT;AAuBA,sBACI;AAAA,4BACI;AACI,MAAA,OAAO,EAAE,MAAME,QAAQ,CAACL,UAAU,CAAC;AAAEe,QAAAA,aAAa,EAAE;AAAjB,OAAD,CAAX,CAD3B;AAAA,gCAGgB,GAHhB;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAMI;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA,gBACKZ,QAAQ,CAACa,GAAT,CAAcC,IAAD,iBACV;AAAA,gCACI;AAAA,oBAAOA,IAAI,CAACC;AAAZ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,oBAAOD,IAAI,CAACE;AAAZ;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAA,oBAAOF,IAAI,CAACG,KAAL,GAAa,MAAb,GAAsB;AAA7B;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA,SAAUH,IAAI,CAACI,EAAf;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH,CA/CD;;GAAMnB,Q;UAGeH,W;;;KAHfG,Q;AAgDN,eAAeA,QAAf","sourcesContent":["import axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport \"./Products.css\";\r\nimport { openDialog } from \"../../redux/dialog/dialogSlice\";\r\nimport { currentProducts } from \"../../redux/product/productSlice\";\r\n\r\nconst Products = () => {\r\n    const [products, setProducts] = useState([]);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        const fetchProducts = async () => {\r\n            try {\r\n                const res = await axios.get(\r\n                    \"https://my-json-server.typicode.com/drakulovski/dbplaceholder/products\",\r\n                    {\r\n                        headers: {\r\n                            \"Content-Type\": \"application/json\",\r\n                            Accept: \"application/json\",\r\n                        },\r\n                    }\r\n                );\r\n                setProducts(res.data);\r\n                dispatch(currentProducts({ products: products }));\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n        };\r\n\r\n        fetchProducts();\r\n        dispatch(currentProducts({ products: products }));\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <button\r\n                onClick={() => dispatch(openDialog({ dialogVisible: true }))}\r\n            >\r\n                Add product{\" \"}\r\n            </button>\r\n            <div className=\"products-container\">\r\n                {products.map((item) => (\r\n                    <div key={item.id}>\r\n                        <span>{item.title}</span>\r\n                        <span>{item.price}</span>\r\n                        <span>{item.stock ? \"true\" : \"false\"}</span>\r\n                        {/* <img src={item.picture} /> */}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default Products;\r\n"]},"metadata":{},"sourceType":"module"}